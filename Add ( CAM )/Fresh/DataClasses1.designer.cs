#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fresh
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TO-AddCAM")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblDegree(tblDegree instance);
    partial void UpdatetblDegree(tblDegree instance);
    partial void DeletetblDegree(tblDegree instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblGender(tblGender instance);
    partial void UpdatetblGender(tblGender instance);
    partial void DeletetblGender(tblGender instance);
    partial void InserttblMember(tblMember instance);
    partial void UpdatetblMember(tblMember instance);
    partial void DeletetblMember(tblMember instance);
    partial void InserttblMemberType(tblMemberType instance);
    partial void UpdatetblMemberType(tblMemberType instance);
    partial void DeletetblMemberType(tblMemberType instance);
    partial void InserttblStaffDepartment(tblStaffDepartment instance);
    partial void UpdatetblStaffDepartment(tblStaffDepartment instance);
    partial void DeletetblStaffDepartment(tblStaffDepartment instance);
    partial void InserttblStaffFunction(tblStaffFunction instance);
    partial void UpdatetblStaffFunction(tblStaffFunction instance);
    partial void DeletetblStaffFunction(tblStaffFunction instance);
    partial void InserttblStudentMajor(tblStudentMajor instance);
    partial void UpdatetblStudentMajor(tblStudentMajor instance);
    partial void DeletetblStudentMajor(tblStudentMajor instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Fresh.Properties.Settings.Default.TO_AddCAMConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblDegree> tblDegrees
		{
			get
			{
				return this.GetTable<tblDegree>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblGender> tblGenders
		{
			get
			{
				return this.GetTable<tblGender>();
			}
		}
		
		public System.Data.Linq.Table<tblMember> tblMembers
		{
			get
			{
				return this.GetTable<tblMember>();
			}
		}
		
		public System.Data.Linq.Table<tblMemberType> tblMemberTypes
		{
			get
			{
				return this.GetTable<tblMemberType>();
			}
		}
		
		public System.Data.Linq.Table<tblStaffDepartment> tblStaffDepartments
		{
			get
			{
				return this.GetTable<tblStaffDepartment>();
			}
		}
		
		public System.Data.Linq.Table<tblStaffFunction> tblStaffFunctions
		{
			get
			{
				return this.GetTable<tblStaffFunction>();
			}
		}
		
		public System.Data.Linq.Table<tblStudentMajor> tblStudentMajors
		{
			get
			{
				return this.GetTable<tblStudentMajor>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDegree")]
	public partial class tblDegree : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DegreeID;
		
		private string _DegreeTitle;
		
		private EntitySet<tblMember> _tblMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDegreeIDChanging(int value);
    partial void OnDegreeIDChanged();
    partial void OnDegreeTitleChanging(string value);
    partial void OnDegreeTitleChanged();
    #endregion
		
		public tblDegree()
		{
			this._tblMembers = new EntitySet<tblMember>(new Action<tblMember>(this.attach_tblMembers), new Action<tblMember>(this.detach_tblMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DegreeID
		{
			get
			{
				return this._DegreeID;
			}
			set
			{
				if ((this._DegreeID != value))
				{
					this.OnDegreeIDChanging(value);
					this.SendPropertyChanging();
					this._DegreeID = value;
					this.SendPropertyChanged("DegreeID");
					this.OnDegreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DegreeTitle", DbType="NVarChar(50)")]
		public string DegreeTitle
		{
			get
			{
				return this._DegreeTitle;
			}
			set
			{
				if ((this._DegreeTitle != value))
				{
					this.OnDegreeTitleChanging(value);
					this.SendPropertyChanging();
					this._DegreeTitle = value;
					this.SendPropertyChanged("DegreeTitle");
					this.OnDegreeTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDegree_tblMember", Storage="_tblMembers", ThisKey="DegreeID", OtherKey="StudentDegreeID")]
		public EntitySet<tblMember> tblMembers
		{
			get
			{
				return this._tblMembers;
			}
			set
			{
				this._tblMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblDegree = this;
		}
		
		private void detach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblDegree = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _UserLabel;
		
		private string _Gender;
		
		private string _DoB;
		
		private string _Phone;
		
		private string _Address;
		
		private string _Username;
		
		private string _Passwd;
		
		private string _UserLevel;
		
		private System.Nullable<bool> _Disabled;
		
		private EntitySet<tblMember> _tblMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUserLabelChanging(string value);
    partial void OnUserLabelChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnDoBChanging(string value);
    partial void OnDoBChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswdChanging(string value);
    partial void OnPasswdChanged();
    partial void OnUserLevelChanging(string value);
    partial void OnUserLevelChanged();
    partial void OnDisabledChanging(System.Nullable<bool> value);
    partial void OnDisabledChanged();
    #endregion
		
		public tblUser()
		{
			this._tblMembers = new EntitySet<tblMember>(new Action<tblMember>(this.attach_tblMembers), new Action<tblMember>(this.detach_tblMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLabel", DbType="NVarChar(50)")]
		public string UserLabel
		{
			get
			{
				return this._UserLabel;
			}
			set
			{
				if ((this._UserLabel != value))
				{
					this.OnUserLabelChanging(value);
					this.SendPropertyChanging();
					this._UserLabel = value;
					this.SendPropertyChanged("UserLabel");
					this.OnUserLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoB", DbType="NVarChar(50)")]
		public string DoB
		{
			get
			{
				return this._DoB;
			}
			set
			{
				if ((this._DoB != value))
				{
					this.OnDoBChanging(value);
					this.SendPropertyChanging();
					this._DoB = value;
					this.SendPropertyChanged("DoB");
					this.OnDoBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="NVarChar(50)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Passwd", DbType="NVarChar(50)")]
		public string Passwd
		{
			get
			{
				return this._Passwd;
			}
			set
			{
				if ((this._Passwd != value))
				{
					this.OnPasswdChanging(value);
					this.SendPropertyChanging();
					this._Passwd = value;
					this.SendPropertyChanged("Passwd");
					this.OnPasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserLevel", DbType="NVarChar(50)")]
		public string UserLevel
		{
			get
			{
				return this._UserLevel;
			}
			set
			{
				if ((this._UserLevel != value))
				{
					this.OnUserLevelChanging(value);
					this.SendPropertyChanging();
					this._UserLevel = value;
					this.SendPropertyChanged("UserLevel");
					this.OnUserLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit")]
		public System.Nullable<bool> Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblMember", Storage="_tblMembers", ThisKey="UserID", OtherKey="UserID")]
		public EntitySet<tblMember> tblMembers
		{
			get
			{
				return this._tblMembers;
			}
			set
			{
				this._tblMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblGender")]
	public partial class tblGender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GenderID;
		
		private string _GenderTitle;
		
		private EntitySet<tblMember> _tblMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGenderIDChanging(int value);
    partial void OnGenderIDChanged();
    partial void OnGenderTitleChanging(string value);
    partial void OnGenderTitleChanged();
    #endregion
		
		public tblGender()
		{
			this._tblMembers = new EntitySet<tblMember>(new Action<tblMember>(this.attach_tblMembers), new Action<tblMember>(this.detach_tblMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GenderID
		{
			get
			{
				return this._GenderID;
			}
			set
			{
				if ((this._GenderID != value))
				{
					this.OnGenderIDChanging(value);
					this.SendPropertyChanging();
					this._GenderID = value;
					this.SendPropertyChanged("GenderID");
					this.OnGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderTitle", DbType="NVarChar(50)")]
		public string GenderTitle
		{
			get
			{
				return this._GenderTitle;
			}
			set
			{
				if ((this._GenderTitle != value))
				{
					this.OnGenderTitleChanging(value);
					this.SendPropertyChanging();
					this._GenderTitle = value;
					this.SendPropertyChanged("GenderTitle");
					this.OnGenderTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGender_tblMember", Storage="_tblMembers", ThisKey="GenderID", OtherKey="GenderID")]
		public EntitySet<tblMember> tblMembers
		{
			get
			{
				return this._tblMembers;
			}
			set
			{
				this._tblMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblGender = this;
		}
		
		private void detach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblGender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMember")]
	public partial class tblMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MemberCode;
		
		private string _MemberPasswd;
		
		private string _MemberName;
		
		private int _GenderID;
		
		private string _MemberDoB;
		
		private string _MemberTel;
		
		private string _MemberAddress;
		
		private string _IDNumber;
		
		private int _MemberTypeID;
		
		private System.Nullable<int> _StaffFunctionID;
		
		private System.Nullable<int> _StaffDepartmentID;
		
		private System.Nullable<int> _StudentMajorID;
		
		private System.Nullable<int> _StudentDegreeID;
		
		private string _RecordDate;
		
		private System.Nullable<bool> _MemberDisabled;
		
		private System.Nullable<int> _UserID;
		
		private EntityRef<tblDegree> _tblDegree;
		
		private EntityRef<tblGender> _tblGender;
		
		private EntityRef<tblUser> _tblUser;
		
		private EntityRef<tblMemberType> _tblMemberType;
		
		private EntityRef<tblStaffDepartment> _tblStaffDepartment;
		
		private EntityRef<tblStaffFunction> _tblStaffFunction;
		
		private EntityRef<tblStudentMajor> _tblStudentMajor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberCodeChanging(string value);
    partial void OnMemberCodeChanged();
    partial void OnMemberPasswdChanging(string value);
    partial void OnMemberPasswdChanged();
    partial void OnMemberNameChanging(string value);
    partial void OnMemberNameChanged();
    partial void OnGenderIDChanging(int value);
    partial void OnGenderIDChanged();
    partial void OnMemberDoBChanging(string value);
    partial void OnMemberDoBChanged();
    partial void OnMemberTelChanging(string value);
    partial void OnMemberTelChanged();
    partial void OnMemberAddressChanging(string value);
    partial void OnMemberAddressChanged();
    partial void OnIDNumberChanging(string value);
    partial void OnIDNumberChanged();
    partial void OnMemberTypeIDChanging(int value);
    partial void OnMemberTypeIDChanged();
    partial void OnStaffFunctionIDChanging(System.Nullable<int> value);
    partial void OnStaffFunctionIDChanged();
    partial void OnStaffDepartmentIDChanging(System.Nullable<int> value);
    partial void OnStaffDepartmentIDChanged();
    partial void OnStudentMajorIDChanging(System.Nullable<int> value);
    partial void OnStudentMajorIDChanged();
    partial void OnStudentDegreeIDChanging(System.Nullable<int> value);
    partial void OnStudentDegreeIDChanged();
    partial void OnRecordDateChanging(string value);
    partial void OnRecordDateChanged();
    partial void OnMemberDisabledChanging(System.Nullable<bool> value);
    partial void OnMemberDisabledChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public tblMember()
		{
			this._tblDegree = default(EntityRef<tblDegree>);
			this._tblGender = default(EntityRef<tblGender>);
			this._tblUser = default(EntityRef<tblUser>);
			this._tblMemberType = default(EntityRef<tblMemberType>);
			this._tblStaffDepartment = default(EntityRef<tblStaffDepartment>);
			this._tblStaffFunction = default(EntityRef<tblStaffFunction>);
			this._tblStudentMajor = default(EntityRef<tblStudentMajor>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberCode", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MemberCode
		{
			get
			{
				return this._MemberCode;
			}
			set
			{
				if ((this._MemberCode != value))
				{
					this.OnMemberCodeChanging(value);
					this.SendPropertyChanging();
					this._MemberCode = value;
					this.SendPropertyChanged("MemberCode");
					this.OnMemberCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberPasswd", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MemberPasswd
		{
			get
			{
				return this._MemberPasswd;
			}
			set
			{
				if ((this._MemberPasswd != value))
				{
					this.OnMemberPasswdChanging(value);
					this.SendPropertyChanging();
					this._MemberPasswd = value;
					this.SendPropertyChanged("MemberPasswd");
					this.OnMemberPasswdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string MemberName
		{
			get
			{
				return this._MemberName;
			}
			set
			{
				if ((this._MemberName != value))
				{
					this.OnMemberNameChanging(value);
					this.SendPropertyChanging();
					this._MemberName = value;
					this.SendPropertyChanged("MemberName");
					this.OnMemberNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GenderID", DbType="Int NOT NULL")]
		public int GenderID
		{
			get
			{
				return this._GenderID;
			}
			set
			{
				if ((this._GenderID != value))
				{
					if (this._tblGender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGenderIDChanging(value);
					this.SendPropertyChanging();
					this._GenderID = value;
					this.SendPropertyChanged("GenderID");
					this.OnGenderIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberDoB", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MemberDoB
		{
			get
			{
				return this._MemberDoB;
			}
			set
			{
				if ((this._MemberDoB != value))
				{
					this.OnMemberDoBChanging(value);
					this.SendPropertyChanging();
					this._MemberDoB = value;
					this.SendPropertyChanged("MemberDoB");
					this.OnMemberDoBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberTel", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MemberTel
		{
			get
			{
				return this._MemberTel;
			}
			set
			{
				if ((this._MemberTel != value))
				{
					this.OnMemberTelChanging(value);
					this.SendPropertyChanging();
					this._MemberTel = value;
					this.SendPropertyChanged("MemberTel");
					this.OnMemberTelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberAddress", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string MemberAddress
		{
			get
			{
				return this._MemberAddress;
			}
			set
			{
				if ((this._MemberAddress != value))
				{
					this.OnMemberAddressChanging(value);
					this.SendPropertyChanging();
					this._MemberAddress = value;
					this.SendPropertyChanged("MemberAddress");
					this.OnMemberAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDNumber", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IDNumber
		{
			get
			{
				return this._IDNumber;
			}
			set
			{
				if ((this._IDNumber != value))
				{
					this.OnIDNumberChanging(value);
					this.SendPropertyChanging();
					this._IDNumber = value;
					this.SendPropertyChanged("IDNumber");
					this.OnIDNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberTypeID", DbType="Int NOT NULL")]
		public int MemberTypeID
		{
			get
			{
				return this._MemberTypeID;
			}
			set
			{
				if ((this._MemberTypeID != value))
				{
					if (this._tblMemberType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMemberTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MemberTypeID = value;
					this.SendPropertyChanged("MemberTypeID");
					this.OnMemberTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffFunctionID", DbType="Int")]
		public System.Nullable<int> StaffFunctionID
		{
			get
			{
				return this._StaffFunctionID;
			}
			set
			{
				if ((this._StaffFunctionID != value))
				{
					if (this._tblStaffFunction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffFunctionIDChanging(value);
					this.SendPropertyChanging();
					this._StaffFunctionID = value;
					this.SendPropertyChanged("StaffFunctionID");
					this.OnStaffFunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffDepartmentID", DbType="Int")]
		public System.Nullable<int> StaffDepartmentID
		{
			get
			{
				return this._StaffDepartmentID;
			}
			set
			{
				if ((this._StaffDepartmentID != value))
				{
					if (this._tblStaffDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStaffDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._StaffDepartmentID = value;
					this.SendPropertyChanged("StaffDepartmentID");
					this.OnStaffDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentMajorID", DbType="Int")]
		public System.Nullable<int> StudentMajorID
		{
			get
			{
				return this._StudentMajorID;
			}
			set
			{
				if ((this._StudentMajorID != value))
				{
					if (this._tblStudentMajor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentMajorIDChanging(value);
					this.SendPropertyChanging();
					this._StudentMajorID = value;
					this.SendPropertyChanged("StudentMajorID");
					this.OnStudentMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentDegreeID", DbType="Int")]
		public System.Nullable<int> StudentDegreeID
		{
			get
			{
				return this._StudentDegreeID;
			}
			set
			{
				if ((this._StudentDegreeID != value))
				{
					if (this._tblDegree.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStudentDegreeIDChanging(value);
					this.SendPropertyChanging();
					this._StudentDegreeID = value;
					this.SendPropertyChanged("StudentDegreeID");
					this.OnStudentDegreeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecordDate", DbType="NVarChar(50)")]
		public string RecordDate
		{
			get
			{
				return this._RecordDate;
			}
			set
			{
				if ((this._RecordDate != value))
				{
					this.OnRecordDateChanging(value);
					this.SendPropertyChanging();
					this._RecordDate = value;
					this.SendPropertyChanged("RecordDate");
					this.OnRecordDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberDisabled", DbType="Bit")]
		public System.Nullable<bool> MemberDisabled
		{
			get
			{
				return this._MemberDisabled;
			}
			set
			{
				if ((this._MemberDisabled != value))
				{
					this.OnMemberDisabledChanging(value);
					this.SendPropertyChanging();
					this._MemberDisabled = value;
					this.SendPropertyChanged("MemberDisabled");
					this.OnMemberDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblDegree_tblMember", Storage="_tblDegree", ThisKey="StudentDegreeID", OtherKey="DegreeID", IsForeignKey=true)]
		public tblDegree tblDegree
		{
			get
			{
				return this._tblDegree.Entity;
			}
			set
			{
				tblDegree previousValue = this._tblDegree.Entity;
				if (((previousValue != value) 
							|| (this._tblDegree.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblDegree.Entity = null;
						previousValue.tblMembers.Remove(this);
					}
					this._tblDegree.Entity = value;
					if ((value != null))
					{
						value.tblMembers.Add(this);
						this._StudentDegreeID = value.DegreeID;
					}
					else
					{
						this._StudentDegreeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblDegree");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblGender_tblMember", Storage="_tblGender", ThisKey="GenderID", OtherKey="GenderID", IsForeignKey=true)]
		public tblGender tblGender
		{
			get
			{
				return this._tblGender.Entity;
			}
			set
			{
				tblGender previousValue = this._tblGender.Entity;
				if (((previousValue != value) 
							|| (this._tblGender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblGender.Entity = null;
						previousValue.tblMembers.Remove(this);
					}
					this._tblGender.Entity = value;
					if ((value != null))
					{
						value.tblMembers.Add(this);
						this._GenderID = value.GenderID;
					}
					else
					{
						this._GenderID = default(int);
					}
					this.SendPropertyChanged("tblGender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblMember", Storage="_tblUser", ThisKey="UserID", OtherKey="UserID", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblMembers.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblMembers.Add(this);
						this._UserID = value.UserID;
					}
					else
					{
						this._UserID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMemberType_tblMember", Storage="_tblMemberType", ThisKey="MemberTypeID", OtherKey="MemberTypeID", IsForeignKey=true)]
		public tblMemberType tblMemberType
		{
			get
			{
				return this._tblMemberType.Entity;
			}
			set
			{
				tblMemberType previousValue = this._tblMemberType.Entity;
				if (((previousValue != value) 
							|| (this._tblMemberType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblMemberType.Entity = null;
						previousValue.tblMembers.Remove(this);
					}
					this._tblMemberType.Entity = value;
					if ((value != null))
					{
						value.tblMembers.Add(this);
						this._MemberTypeID = value.MemberTypeID;
					}
					else
					{
						this._MemberTypeID = default(int);
					}
					this.SendPropertyChanged("tblMemberType");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaffDepartment_tblMember", Storage="_tblStaffDepartment", ThisKey="StaffDepartmentID", OtherKey="StaffDepartmentID", IsForeignKey=true)]
		public tblStaffDepartment tblStaffDepartment
		{
			get
			{
				return this._tblStaffDepartment.Entity;
			}
			set
			{
				tblStaffDepartment previousValue = this._tblStaffDepartment.Entity;
				if (((previousValue != value) 
							|| (this._tblStaffDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaffDepartment.Entity = null;
						previousValue.tblMembers.Remove(this);
					}
					this._tblStaffDepartment.Entity = value;
					if ((value != null))
					{
						value.tblMembers.Add(this);
						this._StaffDepartmentID = value.StaffDepartmentID;
					}
					else
					{
						this._StaffDepartmentID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStaffDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaffFunction_tblMember", Storage="_tblStaffFunction", ThisKey="StaffFunctionID", OtherKey="StaffFunctionID", IsForeignKey=true)]
		public tblStaffFunction tblStaffFunction
		{
			get
			{
				return this._tblStaffFunction.Entity;
			}
			set
			{
				tblStaffFunction previousValue = this._tblStaffFunction.Entity;
				if (((previousValue != value) 
							|| (this._tblStaffFunction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStaffFunction.Entity = null;
						previousValue.tblMembers.Remove(this);
					}
					this._tblStaffFunction.Entity = value;
					if ((value != null))
					{
						value.tblMembers.Add(this);
						this._StaffFunctionID = value.StaffFunctionID;
					}
					else
					{
						this._StaffFunctionID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStaffFunction");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudentMajor_tblMember", Storage="_tblStudentMajor", ThisKey="StudentMajorID", OtherKey="StudentMajorID", IsForeignKey=true)]
		public tblStudentMajor tblStudentMajor
		{
			get
			{
				return this._tblStudentMajor.Entity;
			}
			set
			{
				tblStudentMajor previousValue = this._tblStudentMajor.Entity;
				if (((previousValue != value) 
							|| (this._tblStudentMajor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblStudentMajor.Entity = null;
						previousValue.tblMembers.Remove(this);
					}
					this._tblStudentMajor.Entity = value;
					if ((value != null))
					{
						value.tblMembers.Add(this);
						this._StudentMajorID = value.StudentMajorID;
					}
					else
					{
						this._StudentMajorID = default(Nullable<int>);
					}
					this.SendPropertyChanged("tblStudentMajor");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMemberType")]
	public partial class tblMemberType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemberTypeID;
		
		private string _MemberTypeTitle;
		
		private System.Nullable<bool> _Disabled;
		
		private EntitySet<tblMember> _tblMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemberTypeIDChanging(int value);
    partial void OnMemberTypeIDChanged();
    partial void OnMemberTypeTitleChanging(string value);
    partial void OnMemberTypeTitleChanged();
    partial void OnDisabledChanging(System.Nullable<bool> value);
    partial void OnDisabledChanged();
    #endregion
		
		public tblMemberType()
		{
			this._tblMembers = new EntitySet<tblMember>(new Action<tblMember>(this.attach_tblMembers), new Action<tblMember>(this.detach_tblMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemberTypeID
		{
			get
			{
				return this._MemberTypeID;
			}
			set
			{
				if ((this._MemberTypeID != value))
				{
					this.OnMemberTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MemberTypeID = value;
					this.SendPropertyChanged("MemberTypeID");
					this.OnMemberTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberTypeTitle", DbType="NVarChar(50)")]
		public string MemberTypeTitle
		{
			get
			{
				return this._MemberTypeTitle;
			}
			set
			{
				if ((this._MemberTypeTitle != value))
				{
					this.OnMemberTypeTitleChanging(value);
					this.SendPropertyChanging();
					this._MemberTypeTitle = value;
					this.SendPropertyChanged("MemberTypeTitle");
					this.OnMemberTypeTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disabled", DbType="Bit")]
		public System.Nullable<bool> Disabled
		{
			get
			{
				return this._Disabled;
			}
			set
			{
				if ((this._Disabled != value))
				{
					this.OnDisabledChanging(value);
					this.SendPropertyChanging();
					this._Disabled = value;
					this.SendPropertyChanged("Disabled");
					this.OnDisabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMemberType_tblMember", Storage="_tblMembers", ThisKey="MemberTypeID", OtherKey="MemberTypeID")]
		public EntitySet<tblMember> tblMembers
		{
			get
			{
				return this._tblMembers;
			}
			set
			{
				this._tblMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblMemberType = this;
		}
		
		private void detach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblMemberType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStaffDepartment")]
	public partial class tblStaffDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffDepartmentID;
		
		private string _StaffDepartmentTitle;
		
		private EntitySet<tblMember> _tblMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffDepartmentIDChanging(int value);
    partial void OnStaffDepartmentIDChanged();
    partial void OnStaffDepartmentTitleChanging(string value);
    partial void OnStaffDepartmentTitleChanged();
    #endregion
		
		public tblStaffDepartment()
		{
			this._tblMembers = new EntitySet<tblMember>(new Action<tblMember>(this.attach_tblMembers), new Action<tblMember>(this.detach_tblMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffDepartmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffDepartmentID
		{
			get
			{
				return this._StaffDepartmentID;
			}
			set
			{
				if ((this._StaffDepartmentID != value))
				{
					this.OnStaffDepartmentIDChanging(value);
					this.SendPropertyChanging();
					this._StaffDepartmentID = value;
					this.SendPropertyChanged("StaffDepartmentID");
					this.OnStaffDepartmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffDepartmentTitle", DbType="NVarChar(50)")]
		public string StaffDepartmentTitle
		{
			get
			{
				return this._StaffDepartmentTitle;
			}
			set
			{
				if ((this._StaffDepartmentTitle != value))
				{
					this.OnStaffDepartmentTitleChanging(value);
					this.SendPropertyChanging();
					this._StaffDepartmentTitle = value;
					this.SendPropertyChanged("StaffDepartmentTitle");
					this.OnStaffDepartmentTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaffDepartment_tblMember", Storage="_tblMembers", ThisKey="StaffDepartmentID", OtherKey="StaffDepartmentID")]
		public EntitySet<tblMember> tblMembers
		{
			get
			{
				return this._tblMembers;
			}
			set
			{
				this._tblMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblStaffDepartment = this;
		}
		
		private void detach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblStaffDepartment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStaffFunction")]
	public partial class tblStaffFunction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StaffFunctionID;
		
		private string _StaffFunctionTitle;
		
		private EntitySet<tblMember> _tblMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStaffFunctionIDChanging(int value);
    partial void OnStaffFunctionIDChanged();
    partial void OnStaffFunctionTitleChanging(string value);
    partial void OnStaffFunctionTitleChanged();
    #endregion
		
		public tblStaffFunction()
		{
			this._tblMembers = new EntitySet<tblMember>(new Action<tblMember>(this.attach_tblMembers), new Action<tblMember>(this.detach_tblMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffFunctionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StaffFunctionID
		{
			get
			{
				return this._StaffFunctionID;
			}
			set
			{
				if ((this._StaffFunctionID != value))
				{
					this.OnStaffFunctionIDChanging(value);
					this.SendPropertyChanging();
					this._StaffFunctionID = value;
					this.SendPropertyChanged("StaffFunctionID");
					this.OnStaffFunctionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaffFunctionTitle", DbType="NVarChar(50)")]
		public string StaffFunctionTitle
		{
			get
			{
				return this._StaffFunctionTitle;
			}
			set
			{
				if ((this._StaffFunctionTitle != value))
				{
					this.OnStaffFunctionTitleChanging(value);
					this.SendPropertyChanging();
					this._StaffFunctionTitle = value;
					this.SendPropertyChanged("StaffFunctionTitle");
					this.OnStaffFunctionTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStaffFunction_tblMember", Storage="_tblMembers", ThisKey="StaffFunctionID", OtherKey="StaffFunctionID")]
		public EntitySet<tblMember> tblMembers
		{
			get
			{
				return this._tblMembers;
			}
			set
			{
				this._tblMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblStaffFunction = this;
		}
		
		private void detach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblStaffFunction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblStudentMajor")]
	public partial class tblStudentMajor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StudentMajorID;
		
		private string _StudentMajorTitle;
		
		private EntitySet<tblMember> _tblMembers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudentMajorIDChanging(int value);
    partial void OnStudentMajorIDChanged();
    partial void OnStudentMajorTitleChanging(string value);
    partial void OnStudentMajorTitleChanged();
    #endregion
		
		public tblStudentMajor()
		{
			this._tblMembers = new EntitySet<tblMember>(new Action<tblMember>(this.attach_tblMembers), new Action<tblMember>(this.detach_tblMembers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentMajorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StudentMajorID
		{
			get
			{
				return this._StudentMajorID;
			}
			set
			{
				if ((this._StudentMajorID != value))
				{
					this.OnStudentMajorIDChanging(value);
					this.SendPropertyChanging();
					this._StudentMajorID = value;
					this.SendPropertyChanged("StudentMajorID");
					this.OnStudentMajorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentMajorTitle", DbType="NVarChar(50)")]
		public string StudentMajorTitle
		{
			get
			{
				return this._StudentMajorTitle;
			}
			set
			{
				if ((this._StudentMajorTitle != value))
				{
					this.OnStudentMajorTitleChanging(value);
					this.SendPropertyChanging();
					this._StudentMajorTitle = value;
					this.SendPropertyChanged("StudentMajorTitle");
					this.OnStudentMajorTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblStudentMajor_tblMember", Storage="_tblMembers", ThisKey="StudentMajorID", OtherKey="StudentMajorID")]
		public EntitySet<tblMember> tblMembers
		{
			get
			{
				return this._tblMembers;
			}
			set
			{
				this._tblMembers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblStudentMajor = this;
		}
		
		private void detach_tblMembers(tblMember entity)
		{
			this.SendPropertyChanging();
			entity.tblStudentMajor = null;
		}
	}
}
#pragma warning restore 1591
